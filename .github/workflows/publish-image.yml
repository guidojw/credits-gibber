name: Publish Image

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_NAME: credits-gibber
  REGISTRY_URL: ghcr.io
  APP_ID: 152323

jobs:
  metadata:
    name: Metadata
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_metadata.outputs.tag }}
    steps:
      - name: Get metadata
        id: get_metadata
        run: |
          if [ $GITHUB_REF_NAME = 'main' ]; then
            echo '::set-output name=tag::latest'
          else
            echo '::set-output name=tag::'$GITHUB_REF_NAME
          fi

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: metadata
    steps:
      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f211e3e9ded2d9377c8cadc4489a4e38014bc4c9 # tag=v1.7.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # tag=v1.14.1
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        id: build_push_image
        uses: docker/build-push-action@1cb9d22b932e4832bb29793b7777ec860fc1cde0 # tag=v3.1.0
        with:
          push: true
          context: .
          cache-from: type=gha,scope=main
          cache-to: type=gha,scope=main
          tags: |
            ${{ env.REGISTRY_URL }}/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}:${{
            needs.metadata.outputs.tag }}

  update_check_run:
    name: Update Check Run
    runs-on: ubuntu-latest
    needs: [metadata, publish]
    if: github.event_name == 'workflow_dispatch' && github.workflow == 'Publish Image' && always()
    steps:
      - name: Get conclusion
        id: get_conclusion
        env:
          RESULTS: ${{ join(needs.*.result, ' ') }}
        run: |
          echo '::set-output name=conclusion::success'
          for RESULT in $RESULTS; do
            if [ $RESULT = 'cancelled' ] || [ $RESULT = 'failure' ]; then
              echo '::set-output name=conclusion::'$RESULT
              break
            fi
          done

      - name: Update Publish Image check run
        uses: guidojw/actions/update-check-run@5faa9418b42a6a77f81e11ae935287900673f98b # tag=v1.3.2
        with:
          app_id: ${{ env.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          name: Publish Image
          conclusion: ${{ steps.get_conclusion.outputs.conclusion }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
