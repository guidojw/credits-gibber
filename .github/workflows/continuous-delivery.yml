name: Continuous Delivery

on:
  workflow_dispatch:

concurrency:
  group: cd-${{ github.ref_name }}

env:
  PROJECT_NAME: credits-gibber
  APP_ID: 152323

jobs:
  branch_check:
    name: Branch Check
    runs-on: ubuntu-latest
    steps:
      - name: Validate branch
        run: |
          if [ $GITHUB_REF_NAME != 'main' ]; then
            echo 'This workflow can only be run on the main branch.'
            exit 1
          fi

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: branch_check
    steps:
      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Start deployment
        uses: bobheadxi/deployments@9d4477fdaa4120020cd10ab7e97f68c801422e73 # tag=v1.3.0
        id: start_deployment
        with:
          step: start
          env: production

      - name: Deploy
        uses: appleboy/ssh-action@f9010ff7f1bbd7db1a0b4bab661437550cea20c0 # tag=v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: github-actions
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: PROJECT_NAME
          script: |
            cd /opt/docker/$PROJECT_NAME
            docker-compose pull
            docker-compose up -d

      - name: Finish deployment
        uses: bobheadxi/deployments@9d4477fdaa4120020cd10ab7e97f68c801422e73 # tag=v1.3.0
        if: steps.start_deployment.conclusion == 'success' && always()
        with:
          step: finish
          status: ${{ job.status }}
          deployment_id: ${{ steps.start_deployment.outputs.deployment_id }}
          env: production

  update_check_run:
    name: Update Check Run
    runs-on: ubuntu-latest
    needs: [branch_check, deploy]
    if: github.ref_name == 'main' && always()
    steps:
      - name: Get conclusion
        id: get_conclusion
        env:
          RESULTS: ${{ join(needs.*.result, ' ') }}
        run: |
          echo '::set-output name=conclusion::success'
          for RESULT in $RESULTS; do
            if [ $RESULT = 'cancelled' ] || [ $RESULT = 'failure' ]; then
              echo '::set-output name=conclusion::'$RESULT
              break
            fi
          done

      - name: Update Continuous Delivery check run
        uses: guidojw/actions/update-check-run@5faa9418b42a6a77f81e11ae935287900673f98b # tag=v1.3.2
        with:
          app_id: ${{ env.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          name: Continuous Delivery
          conclusion: ${{ steps.get_conclusion.outputs.conclusion }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
